* Setup  :PTY:

#+BEGIN_SRC compile-queue
cd {{project_root}}
qmk setup zsa/qmk_firmware -b firmware20
ln -s "$(pwd)/lib/compilation_database.py" "$HOME/qmk_firmware/lib/python/qmk/cli/generate/compilation_database.py"
  echo from . import compilation_database >> "$HOME/qmk_firmware/lib/python/qmk/cli/generate/__init__.py"
  ln -s "$(pwd)" ~/qmk_firmware/keyboards/moonlander/keymaps/decest
  qmk generate-compilation-database -kb moonlander -km decest
#+END_SRC

* Install QMK :PTY:


#+BEGIN_SRC compile-queue
set -o errexit
set -o pipefail
set -o nounset
cd {{project_root}}
sh ~/qmk_firmware/util/qmk_install.sh 

#+END_SRC



* Compile

#+BEGIN_SRC compile-queue
#+END_SRC

#+BEGIN_SRC compile-queue
  cd "$HOME/qmk_firmware"
  gmake moonlander:decest
  mkdir -p "{{project_root}}build"
  cp "$HOME/qmk_firmware/moonlander_decest.bin" "{{project_root}}build/layout.bin"
#+END_SRC

* Update to Latest

#+BEGIN_SRC compile-queue
  set -o errexit
  set -o pipefail
  set -o nounset
  cd {{project_root}}
  curl -X POST https://oryx.zsa.io/graphql -H 'Content-Type: application/json' --data '{"operationName":"getLayout","variables":{"hashId":"gO33N","geometry":"moonlander","revisionId":"latest"},"query":"query getLayout($hashId: String!, $revisionId: String!, $geometry: String) {\n  Layout(hashId: $hashId, geometry: $geometry, revisionId: $revisionId) {\n    ...LayoutData\n    __typename\n  }\n}\n\nfragment LayoutData on Layout {\n  privacy\n  geometry\n  hashId\n  parent {\n    hashId\n    __typename\n  }\n  tags {\n    id\n    hashId\n    name\n    __typename\n  }\n  title\n  user {\n    annotationPublic\n    name\n    hashId\n    pictureUrl\n    __typename\n  }\n  revision {\n    ...RevisionData\n    __typename\n  }\n  __typename\n}\n\nfragment RevisionData on Revision {\n  aboutIntro\n  aboutOutro\n  createdAt\n  hashId\n  hexUrl\n  model\n  title\n  config\n  swatch\n  zipUrl\n  qmkVersion\n  qmkUptodate\n  md5\n  layers {\n    builtIn\n    hashId\n    keys\n    position\n    title\n    color\n    __typename\n  }\n  __typename\n}\n"}' \
  | jq --raw-output .data.Layout.revision.zipUrl | xargs wget -O layout.zip
  mkdir -p layout_output
  yes | unzip layout.zip -d layout_output

  cp -r layout_output/moonlander_decest_source/* ./
  rm -r layout_output
  rm layout.zip
#+END_SRC

#+RESULTS:
: 738a4ad4-2960-2cc4-2e63-3e676cd4daba


* Flash Firmware

#+BEGIN_SRC compile-queue
set -o errexit
set -o pipefail
set -o nounset
cd {{project_root}}
wally-cli build/layout.bin
#+END_SRC

